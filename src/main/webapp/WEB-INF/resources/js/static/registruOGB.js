var registruOGBTable;var addOGBForm = $('#modal-addRegistru-ogb-form');var rezervaOGBForm = $('#modal-rezerva-ogb-form');var editForm = $('#modal-editRegistru-ogb-form');var selected;var lastOgb;jQuery.validator.addMethod("checkOgb", function (value, element) {    return this.optional(element) || checkNrInregistrareOGB(value);}, 'Num&#259;rul de &#238;nregistrare exist&#259; deja &#238;n registru sau nu este un num&#259;r consecutiv');function findLastNrInregistrareOgb() {    var token = $("meta[name='_csrf']").attr("content");    var header = $("meta[name='_csrf_header']").attr("content");    $.ajax({        type: 'get',        url: '/app/secure/registru/get-last-ogb',        contentType: "application/json",        async: false,        beforeSend: function (xhr) {            xhr.setRequestHeader(header, token);        },        success: function (response) {            if (response) {                lastOgb = response;            }        },        error: function () {            lastOgb = '1';        }    });}function checkNrInregistrareOGB(value) {    var token = $("meta[name='_csrf']").attr("content");    var header = $("meta[name='_csrf_header']").attr("content");    var retVal = true;    $.ajax({        type: 'get',        url: '/app/secure/registru/duplicate/ogb/' + value,        async: false,        beforeSend: function (xhr) {            xhr.setRequestHeader(header, token);        },        contentType: 'application/json',        success: function (response) {            if (response.id < 0) {                retVal = false;            }        }    });    return retVal;}$(document).ready(function () {    getAllTipContinut('addRegistru-ogb-form-idTipContinut');    getAllDestinatari('addRegistru-ogb-form-idDestinatar');    getAllTipContinut('editRegistru-ogb-form-idTipContinut');    getAllDestinatari('editRegistru-ogb-form-idDestinatar');    $('#registru-ogb').addClass('active');    $('#registru-ogb-table').find('thead th').each(function () {        var title = $('#registru-ogb-table').find('thead th').eq($(this).index()).text();        $(this).append('<input style="display:none;" type="text" placeholder="Caut&#259; ' + title + '" />');    });    try {        registruOGBTable = $('#registru-ogb-table').DataTable({            "ajax": {                "url": '/app/secure/registru/get-ogb',                "dataSrc": ""            },            "buttons": [                {                    extend: 'excel',                    text: '<span class="fa fa-file-excel-o" title="Apasa ALT+X pentru a salva tabelul in format Excel">&nbsp;&nbsp;</span><span>XLS</span>',                    className: 'btn btn-default',                    key: {                        key: 'x',                        altKey: true                    },                    exportOptions: {                        columns: ':visible'                    }                }, {                    extend: 'pdf',                    text: '<span class="fa fa-file-pdf-o" title="Apasa ALT+F pentru a salva tabelul in format PDF">&nbsp;&nbsp;</span><span>PDF</span>',                    className: 'btn btn-default',                    key: {                        key: 'f',                        altKey: true                    },                    orientation: 'landscape',                    title: 'Registru OG/B',                    exportOptions: {                        columns: ':visible'                    }                }, {                    extend: 'print',                    text: '<span class="fa fa-print" title="Apasa ALT+P pentru a trimite la print">&nbsp;&nbsp;</span><span>Print</span>',                    className: 'btn btn-default',                    key: {                        key: 'p',                        altKey: true                    },                    title: 'Registru OG/B',                    exportOptions: {                        columns: ':visible'                    }                },                {                    extend: 'colvis',                    text: '<span class="fa fa-adjust">&nbsp;&nbsp;</span><span>Alege coloane vizibile</span>',                    className: 'btn btn-default'                }            ],            "columns": [                {                    "data": "nrInregistrare",                    "className": 'text-bold'                },                {                    "data": "dataInregistrare",                    "className": 'text-bold'                },                {"data": "nrSiDataDocumentului"},                {"data": "emitent"},                {"data": "continut"},                {"data": "dataExpediere"},                {"data": "destinatar"},                {"data": "formatFizic"}            ],            "columnDefs": [                {                    "targets": [0],                    "visible": true,                    "bUseRendered": true,                    "fnCreatedCell": function (nTd, sData, oData, i) {                        if (oData.anulat != 1 && oData.rezervat == 1) {                            $(nTd).closest('tr').addClass('rand-rezervat');                            $(nTd).closest('tr').prop('title', 'Aceasta înregistrare este rezervata');                            $(nTd).html('<a class="btn rezervat fa fa-edit"></a>  ' + oData.nrInregistrare);                        }                    }                },                {                    "targets": [1],                    "bUseRendered": true,                    "visible": true,                    "render": function (data, type, row) {                        if (data) {                            return generateFormattedDate(new Date(data));                        } else {                            return '';                        }                    },                    "fnCreatedCell": function (nTd, sData, oData, i) {                        if (oData.anulat == 1) {                            $(nTd).closest('tr').addClass('anulat');                        }                    }                },                {                    "targets": [7],                    "bUseRendered": true,                    "visible": true,                    "fnCreatedCell": function (nTd, sData, oData, i) {                        var anulat = oData.anulat;                        $(nTd).html('<div class="checkbox"><label><input data-path="ogb" class="format-fizic" id="ogb-' + oData.idRegistruOgb + '" type="checkbox" ' + (sData == 0 ? (anulat == 1 ? 'disabled="disabled" ' : '' ) : ' checked="" disabled="disabled" ') + '></label></div>');                    }                }            ],            dom: '<"clear"><"break-row"><"pull-right"B>lrtip<"break-row-lg">'        });    } catch (err) {        console.log(err);    }    registruOGBTable.columns().every(function () {        var that = this;        $('input', this.header()).on('keyup change', function () {            that                .search(this.value)                .draw();        });    });    $("#registru-ogb-search").on('keyup', function () {        registruOGBTable.search(this.value).draw();    });    addOGBForm.validate({        rules: {            required: true,            nrInregistrare: {                checkOgb: true            },            idDestinatar: {                'dependentBA-ogb': true,                required: false            },            dataExpediere: {                'dependentAB-ogb': true,                required: false            },            formatFizic: {                required: false            },            emitent: {                required: false            },            idTipContinut: {                required: false            },            nrSiDataDocumentului: {                required: false            }        },        messages: {            nrInregistrare: {required: "Acest c&#226;mp este obligatoriu"},            nrSiDataDocumentului: {required: "Acest c&#226;mp este obligatoriu"},            dataInregistrare: {required: "Acest c&#226;mp este obligatoriu"},            idTipContinut: {required: "Acest c&#226;mp este obligatoriu"},            emitent: {required: "Acest c&#226;mp este obligatoriu"},            continut: {required: "Acest c&#226;mp este obligatoriu"}        }    });    addOGBForm.on('submit', function (e) {        e.preventDefault();        if (!$(this).valid()) {            return;        }        var token = $("meta[name='_csrf']").attr("content");        var header = $("meta[name='_csrf_header']").attr("content");        var nrInregistrare = $('#addRegistru-ogb-form-nrInregistrare').val();        var nrSiDataDocumentului = $('#addRegistru-ogb-form-nrSiDataDocumentului').val();        var dataInregistrare = $('#addRegistru-ogb-form-dataInregistrare').val();        var idTipContinut = $('#addRegistru-ogb-form-idTipContinut').val();        var emitent = $('#addRegistru-ogb-form-emitent').val();        var idDestinatar = $('#addRegistru-ogb-form-idDestinatar').val();        var continut = $('#addRegistru-ogb-form-continut').val();        var dataExpediere = $('#addRegistru-ogb-form-dataExpediere').val();        var formatFizic = $('#addRegistru-ogb-form-formatFizic').prop('checked') ? 1 : 0;        var dataToSend = {            "nrInregistrare": nrInregistrare, "dataInregistrare": processDateForServer(dataInregistrare),            "emitent": emitent, "nrSiDataDocumentului": nrSiDataDocumentului,            "idTipContinut": idTipContinut, "idDestinatar": idDestinatar,            "continut": continut, "dataExpediere": processDateForServer(dataExpediere), "formatFizic": formatFizic        };        $.ajax({            type: 'post',            url: $(this).attr('action'),            beforeSend: function (xhr) {                xhr.setRequestHeader(header, token);            },            dataType: 'json',            contentType: 'application/json',            mimeType: 'application/json',            data: JSON.stringify(dataToSend),            success: function (response) {                $('#modal-addRegistru-ogb').modal('hide');                addOGBForm.trigger('reset');                $('.chosen-select').trigger(chosenUpdated);                registruOGBTable.ajax.reload(null, false);                showNotification(response.message, 'Success', SUCCESS);            },            error: function () {                showNotification("Eroare. Mai &#238;ncerca&#539;i o dat&#259;.", "Eroare", ERROR);            }        });    });    rezervaOGBForm.validate({        rules: {            required: true        },        messages: {            numarInregistrari: {                required: "Acest c&#226;mp este obligatoriu"            },            dataInregistrare: {                required: "Acest c&#226;mp este obligatoriu"            }        }    });    rezervaOGBForm.on('submit', function (e) {        e.preventDefault();        if (!$(this).valid()) {            return;        }        var token = $("meta[name='_csrf']").attr("content");        var header = $("meta[name='_csrf_header']").attr("content");        var numarInregistrari = $('#rezerva-ogb-form-numarInregistrari').val();        var dataInregistrare = $('#rezerva-ogb-form-dataInregistrare').val();        var dataToSend = {            "numarInregistrari": numarInregistrari, "dataInregistrare": processDateForServer(dataInregistrare)        };        $.ajax({            type: 'post',            url: $(this).attr('action'),            beforeSend: function (xhr) {                xhr.setRequestHeader(header, token);            },            dataType: 'json',            contentType: 'application/json',            mimeType: 'application/json',            data: JSON.stringify(dataToSend),            success: function (response) {                $('#modal-rezerva-ogb').modal('hide');                rezervaOGBForm.trigger('reset');                $('.chosen-select').trigger(chosenUpdated);                registruOGBTable.ajax.reload(null, false);                showNotification(response.message, 'Success', SUCCESS);            },            error: function () {                showNotification("Eroare. Mai &#238;ncerca&#539;i o dat&#259;.", "Eroare", ERROR);            }        });    });    editForm.validate({        rules: {            required: true,            nrInregistrare: {                checkOgb: true            },            idDestinatar: {                'dependentBA-ogb': true,                required: false            },            dataExpediere: {                'dependentAB-ogb': true,                required: false            },            formatFizic: {                required: false            },            emitent: {                required: false            },            idTipContinut: {                required: false            },            nrSiDataDocumentului: {                required: false            }        },        messages: {            nrInregistrare: {required: "Acest c&#226;mp este obligatoriu"},            nrSiDataDocumentului: {required: "Acest c&#226;mp este obligatoriu"},            dataInregistrare: {required: "Acest c&#226;mp este obligatoriu"},            idTipContinut: {required: "Acest c&#226;mp este obligatoriu"},            emitent: {required: "Acest c&#226;mp este obligatoriu"},            continut: {required: "Acest c&#226;mp este obligatoriu"}        }    });    editForm.on('submit', function (e) {        if (!$(this).valid()) {            return;        }        var token = $("meta[name='_csrf']").attr("content");        var header = $("meta[name='_csrf_header']").attr("content");        var idRegistruOgb = $('#editRegistru-ogb-form-idRegistruOgb').val();        var nrInregistrare = $('#editRegistru-ogb-form-nrInregistrare').val();        var nrSiDataDocumentului = $('#editRegistru-ogb-form-nrSiDataDocumentului').val();        var dataInregistrare = $('#editRegistru-ogb-form-dataInregistrare').val();        var idTipContinut = $('#editRegistru-ogb-form-idTipContinut').val();        var emitent = $('#editRegistru-ogb-form-emitent').val();        var idDestinatar = $('#editRegistru-ogb-form-idDestinatar').val();        var continut = $('#editRegistru-ogb-form-continut').val();        var dataExpediere = $('#editRegistru-ogb-form-dataExpediere').val();        var creatDe = $('#editRegistru-ogb-form-creatDe').val();        var creatLa = $('#editRegistru-ogb-form-creatLa').val();        var formatFizic = $('#editRegistru-ogb-form-formatFizic').prop('checked') ? 1 : 0;        var dataToSend = {            "idRegistruOgb": idRegistruOgb, "nrInregistrare": nrInregistrare,            "dataInregistrare": processDateForServer(dataInregistrare),            "emitent": emitent, "nrSiDataDocumentului": nrSiDataDocumentului,            "idTipContinut": idTipContinut, "idDestinatar": idDestinatar,            "continut": continut, "creatDe": creatDe, "creatLa": creatLa,            "dataExpediere": processDateForServer(dataExpediere), "formatFizic": formatFizic        };        $.ajax({            type: 'post',            url: $(this).attr('action'),            beforeSend: function (xhr) {                xhr.setRequestHeader(header, token);            },            dataType: 'json',            contentType: 'application/json',            mimeType: 'application/json',            data: JSON.stringify(dataToSend),            success: function (response) {                $('#modal-editRegistru-ogb').modal('hide');                editForm.trigger('reset');                $('.chosen-select').trigger(chosenUpdated);                registruOGBTable.ajax.reload(null, false);                showNotification(response.message, 'Success', SUCCESS);            },            error: function () {                showNotification("Eroare. Mai &#238;ncerca&#539;i o dat&#259;.", "Eroare", ERROR);            }        });        e.preventDefault();    });    $(document).on('shown.bs.modal', '#modal-addRegistru-ogb', function () {        findLastNrInregistrareOgb();        getAllTipContinut('addRegistru-ogb-form-idTipContinut');        getAllDestinatari('addRegistru-ogb-form-idDestinatar');        $('#addRegistru-ogb-form-dataInregistrare').val(generateFormattedDate(new Date()));        $('#addRegistru-ogb-form-nrInregistrare').val(lastOgb);    });    $(document).on('click', '.rezervat', function () {        rezervaData = registruOGBTable.row($(this).closest('tr')).data();        rezervaPath = 'ogb';        var editModal = $('#modal-editRegistru-ogb');        var idRegistruOgb = $('#editRegistru-ogb-form-idRegistruOgb');        var creatDe = $('#editRegistru-ogb-form-creatDe');        var creatLa = $('#editRegistru-ogb-form-creatLa');        var nrInregistrare = $('#editRegistru-ogb-form-nrInregistrare');        var dataInregistrare = $('#editRegistru-ogb-form-dataInregistrare');        editForm.trigger('reset');        idRegistruOgb.val(rezervaData.idRegistruOgb);        creatDe.val(rezervaData.creatDe);        creatLa.val(rezervaData.creatLa);        nrInregistrare.val(rezervaData.nrInregistrare);        nrInregistrare.prop('disabled', 'disabled');        dataInregistrare.val(processDateForClient(rezervaData.dataInregistrare));        dataInregistrare.prop('disabled', 'disabled');        editModal.modal('show');    });    $(document).on('click', '#anuleazaOgb', function () {        selectedRowId = registruOGBTable.row('.selected').data().idRegistruOgb;        anuleazaPath = 'ogb';        confirmModalAnuleazaInregistrare();    });    $(document).on('click', '#advanced-search', function () {        $('#registru-ogb-table').find('thead th input').each(function (i) {            $(this).toggle('display');            if (i == 0) {                $(this).focus();            }        });    });    $(document).keyup(function (e) {        if (e.keyCode == 27) {            $('#registru-ogb-table').find('thead th input').each(function (i) {                $(this).hide();            });        }    });});