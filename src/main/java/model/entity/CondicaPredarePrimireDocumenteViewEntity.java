package model.entity;import javax.persistence.*;import java.sql.Date;import java.sql.Timestamp;@Entity@Table(name = "condica_predare_primire_documente_view", schema = "", catalog = "registru")public class CondicaPredarePrimireDocumenteViewEntity {    private long idCondicaPredareSiPrimireDocumente;    private String nrInregistrare;    private Date dataInregistrare;    private String destinatar;    private String semnaturaPrimire;    private String creatDe;    private Timestamp creatLa;    private Integer anulat;    private Integer rezervat;    @Id    @Column(name = "id_condica_predare_si_primire_documente", nullable = false, insertable = true, updatable = true)    public long getIdCondicaPredareSiPrimireDocumente() {        return idCondicaPredareSiPrimireDocumente;    }    public void setIdCondicaPredareSiPrimireDocumente(long idCondicaPredareSiPrimireDocumente) {        this.idCondicaPredareSiPrimireDocumente = idCondicaPredareSiPrimireDocumente;    }    @Basic    @Column(name = "nr_inregistrare", nullable = false, insertable = true, updatable = true, length = 250)    public String getNrInregistrare() {        return nrInregistrare;    }    public void setNrInregistrare(String nrInregistrare) {        this.nrInregistrare = nrInregistrare;    }    @Basic    @Column(name = "data_inregistrare", nullable = false, insertable = true, updatable = true)    public Date getDataInregistrare() {        return dataInregistrare;    }    public void setDataInregistrare(Date dataInregistrare) {        this.dataInregistrare = dataInregistrare;    }    @Basic    @Column(name = "destinatar", nullable = false, insertable = true, updatable = true, length = 250)    public String getDestinatar() {        return destinatar;    }    public void setDestinatar(String destinatar) {        this.destinatar = destinatar;    }    @Basic    @Column(name = "semnatura_primire", nullable = true, insertable = true, updatable = true, length = 250)    public String getSemnaturaPrimire() {        return semnaturaPrimire;    }    public void setSemnaturaPrimire(String semnaturaPrimire) {        this.semnaturaPrimire = semnaturaPrimire;    }    @Basic    @Column(name = "creat_de", nullable = false, insertable = true, updatable = true, length = 250)    public String getCreatDe() {        return creatDe;    }    public void setCreatDe(String creatDe) {        this.creatDe = creatDe;    }    @Basic    @Column(name = "creat_la", nullable = false, insertable = true, updatable = true)    public Timestamp getCreatLa() {        return creatLa;    }    public void setCreatLa(Timestamp creatLa) {        this.creatLa = creatLa;    }    @Basic    @Column(name = "anulat", nullable = true, insertable = true, updatable = true)    public Integer getAnulat() {        return anulat;    }    public void setAnulat(Integer anulat) {        this.anulat = anulat;    }    @Basic    @Column(name = "rezervat", nullable = true, insertable = true, updatable = true)    public Integer getRezervat() {        return rezervat;    }    public void setRezervat(Integer rezervat) {        this.rezervat = rezervat;    }    @Override    public boolean equals(Object o) {        if (this == o) return true;        if (!(o instanceof CondicaPredarePrimireDocumenteViewEntity)) return false;        CondicaPredarePrimireDocumenteViewEntity that = (CondicaPredarePrimireDocumenteViewEntity) o;        if (idCondicaPredareSiPrimireDocumente != that.idCondicaPredareSiPrimireDocumente) return false;        if (nrInregistrare != null ? !nrInregistrare.equals(that.nrInregistrare) : that.nrInregistrare != null) return false;        if (dataInregistrare != null ? !dataInregistrare.equals(that.dataInregistrare) : that.dataInregistrare != null) return false;        if (destinatar != null ? !destinatar.equals(that.destinatar) : that.destinatar != null) return false;        if (semnaturaPrimire != null ? !semnaturaPrimire.equals(that.semnaturaPrimire) : that.semnaturaPrimire != null) return false;        if (creatDe != null ? !creatDe.equals(that.creatDe) : that.creatDe != null) return false;        if (creatLa != null ? !creatLa.equals(that.creatLa) : that.creatLa != null) return false;        return !(anulat != null ? !anulat.equals(that.anulat) : that.anulat != null);    }    @Override    public int hashCode() {        int result = (int) (idCondicaPredareSiPrimireDocumente ^ (idCondicaPredareSiPrimireDocumente >>> 32));        result = 31 * result + (nrInregistrare != null ? nrInregistrare.hashCode() : 0);        result = 31 * result + (dataInregistrare != null ? dataInregistrare.hashCode() : 0);        result = 31 * result + (destinatar != null ? destinatar.hashCode() : 0);        result = 31 * result + (semnaturaPrimire != null ? semnaturaPrimire.hashCode() : 0);        result = 31 * result + (creatDe != null ? creatDe.hashCode() : 0);        result = 31 * result + (creatLa != null ? creatLa.hashCode() : 0);        result = 31 * result + (anulat != null ? anulat.hashCode() : 0);        return result;    }}