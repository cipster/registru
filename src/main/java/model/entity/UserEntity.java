package model.entity;import javax.persistence.*;import java.sql.Timestamp;@Entity@Table(name = "user", schema = "", catalog = "registru")public class UserEntity {    private long idUser;    private Integer enabled;    private Timestamp lastLogin;    private Timestamp lastPassChange;    private String password;    private String username;    @Id    @Column(name = "id_user", nullable = false, insertable = true, updatable = true)    public long getIdUser() {        return idUser;    }    public void setIdUser(long idUser) {        this.idUser = idUser;    }    @Basic    @Column(name = "enabled", nullable = false, insertable = true, updatable = true)    public Integer getEnabled() {        return enabled;    }    public void setEnabled(Integer enabled) {        this.enabled = enabled;    }    @Basic    @Column(name = "last_login", nullable = true, insertable = true, updatable = true)    public Timestamp getLastLogin() {        return lastLogin;    }    public void setLastLogin(Timestamp lastLogin) {        this.lastLogin = lastLogin;    }    @Basic    @Column(name = "last_pass_change", nullable = true, insertable = true, updatable = true)    public Timestamp getLastPassChange() {        return lastPassChange;    }    public void setLastPassChange(Timestamp lastPassChange) {        this.lastPassChange = lastPassChange;    }    @Basic    @Column(name = "password", nullable = false, insertable = true, updatable = true, length = 255)    public String getPassword() {        return password;    }    public void setPassword(String password) {        this.password = password;    }    @Basic    @Column(name = "username", nullable = false, insertable = true, updatable = true, length = 45)    public String getUsername() {        return username;    }    public void setUsername(String username) {        this.username = username;    }    @Override    public boolean equals(Object o) {        if (this == o) return true;        if (o == null || getClass() != o.getClass()) return false;        UserEntity that = (UserEntity) o;        if (idUser != that.idUser) return false;        if (enabled != that.enabled) return false;        if (lastLogin != null ? !lastLogin.equals(that.lastLogin) : that.lastLogin != null) return false;        if (lastPassChange != null ? !lastPassChange.equals(that.lastPassChange) : that.lastPassChange != null) return false;        if (password != null ? !password.equals(that.password) : that.password != null) return false;        if (username != null ? !username.equals(that.username) : that.username != null) return false;        return true;    }    @Override    public int hashCode() {        int result = (int) (idUser ^ (idUser >>> 32));        result = 31 * result + enabled;        result = 31 * result + (lastLogin != null ? lastLogin.hashCode() : 0);        result = 31 * result + (lastPassChange != null ? lastPassChange.hashCode() : 0);        result = 31 * result + (password != null ? password.hashCode() : 0);        result = 31 * result + (username != null ? username.hashCode() : 0);        return result;    }}