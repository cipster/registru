package controllers.rest;import model.ProfilEntity;import model.ProfilViewEntity;import model.response.JSONResponse;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.beans.propertyeditors.CustomDateEditor;import org.springframework.security.access.prepost.PreAuthorize;import org.springframework.web.bind.WebDataBinder;import org.springframework.web.bind.annotation.*;import services.ProfilService;import java.beans.PropertyEditorSupport;import java.text.SimpleDateFormat;import java.util.Date;@RestController@RequestMapping("/app/secure/profil")public class ProfilRestController {    @Autowired    private ProfilService profilService;    @InitBinder    public void initBinder(WebDataBinder binder) {        SimpleDateFormat sdf = new SimpleDateFormat("mm-dd-yyyy");        sdf.setLenient(true);        binder.registerCustomEditor(Date.class, new CustomDateEditor(sdf, true));        binder.registerCustomEditor(long.class, new PropertyEditorSupport() {            @Override            public void setAsText(String text) {                if (text.trim().length() == 0) {                    text = "0";                }                long ch = Long.parseLong(text);                setValue(ch);            }        });    }    @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_USER')")    @RequestMapping(value = "/get-user", method = RequestMethod.GET)    @ResponseBody    public ProfilViewEntity getLoggedInUser() {        return profilService.getProfil();    }    @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_USER')")    @RequestMapping(value = "/schimba-parola/{password}", method = RequestMethod.GET, produces = "application/json")    @ResponseBody    public JSONResponse changePassword(@PathVariable String password) {        return profilService.changePassword(password);    }    @PreAuthorize("hasAnyRole('ROLE_ADMIN', 'ROLE_USER')")    @RequestMapping(value = "/save-user", method = RequestMethod.POST, produces = "application/json")    @ResponseBody    public JSONResponse changeUser(@RequestBody ProfilEntity profil) {        return profilService.save(profil);    }}